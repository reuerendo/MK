name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        platform: [x64, x86]
        configuration: [Release]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install .NET workloads
      run: |
        dotnet workload install microsoft-windows-sdk-projecttemplates
        dotnet workload install maui-windows

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3

    - name: Restore dependencies
      run: dotnet restore

    - name: Build MSIX package
      run: |
        dotnet publish -c ${{ matrix.configuration }} -r win-${{ matrix.platform }} --self-contained true -p:WindowsPackageType=MSIX -p:Platform=${{ matrix.platform }} -p:GenerateAppInstallerFile=false

    - name: List generated files
      run: |
        Get-ChildItem -Recurse -Include "*.msix", "*.appx", "*.appxbundle" | Select-Object FullName
        Get-ChildItem -Path "." -Recurse -Directory -Name "*publish*", "*Package*"

    - name: Upload MSIX artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MiniKeyboard-${{ matrix.platform }}-MSIX
        path: |
          bin/${{ matrix.configuration }}/net8.0-windows10.0.19041.0/win-${{ matrix.platform }}/AppPackages/**/*
          publish/**/*

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/*.msix
          **/*.appxbundle
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}