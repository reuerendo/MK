name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        platform: [x64, x86]
        configuration: [Release]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup Visual Studio Build Tools
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Install Visual Studio components
      run: |
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.MSBuildTools --add Microsoft.VisualStudio.Workload.UniversalBuildTools --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --add Microsoft.VisualStudio.ComponentGroup.UWP.BuildTools --quiet"

    - name: Install .NET workloads
      run: |
        dotnet workload install microsoft-windows-sdk-projecttemplates
        dotnet workload install maui-windows

    - name: Restore dependencies
      run: dotnet restore

    - name: Build MSIX package
      run: |
        msbuild MiniKeyboard.csproj /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }} /p:AppxPackageSigningEnabled=false /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxBundle=Never /p:GenerateAppInstallerFile=false

    - name: Debug - List all generated files
      run: |
        Write-Host "=== All .msix and .appx files ==="
        Get-ChildItem -Recurse -Include "*.msix", "*.appx" | ForEach-Object { Write-Host $_.FullName }
        Write-Host ""
        Write-Host "=== Directory structure ==="
        Get-ChildItem -Path "." -Recurse -Directory | Where-Object { $_.Name -like "*Package*" -or $_.Name -like "*AppPackages*" } | ForEach-Object { Write-Host $_.FullName }
        Write-Host ""
        Write-Host "=== Bin directory structure ==="
        if (Test-Path "bin") {
          Get-ChildItem -Path "bin" -Recurse | ForEach-Object { Write-Host $_.FullName }
        }

    - name: Upload MSIX artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MiniKeyboard-${{ matrix.platform }}-MSIX
        path: |
          **/*.msix
          **/*.appx
          **/*.appxbundle
        if-no-files-found: error

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: List downloaded files
      run: |
        Write-Host "=== Downloaded artifacts ==="
        Get-ChildItem -Recurse | ForEach-Object { Write-Host $_.FullName }

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/*.msix
          **/*.appx
          **/*.appxbundle
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}